---

- name: platform dependent vars
  include_vars: "{{ item }}"
  loop: "{{ query('first_found', params, errors='ignore') }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "{{ ansible_system }}.yml"
      paths:
        - '{{ role_path }}/vars/platform/'
  tags: always

- name: platform dependent tasks
  include_tasks: "{{ item }}"
  loop: "{{ query('first_found', params, errors='ignore') }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "{{ ansible_system }}.yml"
      paths:
        - '{{ role_path }}/tasks/platform/pre-install/'
  tags: install

- name: install kibana
  package:
    name: kibana
    state: present
  tags: install

- name: populate service facts
  service_facts:
  tags: always

- name: configure kibana
  template:
    src: "kibana.yml.j2"
    dest: "{{ config_file_path | default(platform['config_file_path']) }}"
  notify: restart kibana
  tags: configure

- name: setup services
  systemd:
    name: kibana
    enabled: "{{ service['enabled'] }}"
    state: "{{ service['state'] }}"
  when:
    - ansible_service_mgr == 'systemd'
    - ansible_facts['services']['kibana'] is defined
  tags: always
